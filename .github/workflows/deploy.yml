name: deploy

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.10.12]

    steps:
      # 소스 코드 체크아웃
      - name: Checkout source code
        uses: actions/checkout@v2

      # Python 환경 설정
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # 의존성 설치 및 시스템 패키지 업데이트
      - name: Install dependencies and update system packages
        run: |
          python -m venv venv
          source venv/bin/activate
          sudo apt-get update
          sudo apt-get install -y build-essential libssl-dev libffi-dev python3-dev
          pip install --upgrade pip
          pip install -r requirements.txt

      # .env 파일 생성
      - name: Create .env file
        run: |
          cd InT
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "PUBLIC_IP=${{ secrets.PUBLIC_IP }}" >> .env
          echo "DATABASES_ENGINE=${{ secrets.DATABASES_ENGINE }}" >> .env
          echo "DATABASES_NAME=${{ secrets.DATABASES_NAME }}" >> .env
          echo "DATABASES_USER=${{ secrets.DATABASES_USER }}" >> .env
          echo "DATABASES_PASSWORD=${{ secrets.DATABASES_PASSWORD }}" >> .env
          echo "DATABASES_HOST=${{ secrets.DATABASES_HOST }}" >> .env
          echo "DATABASES_PORT=${{ secrets.DATABASES_PORT }}" >> .env
          echo "TOPIC_ARN=${{ secrets.TOPIC_ARN }}" >> .env
          echo "SUB_EMAIL_ARN=${{ secrets.SUB_EMAIL_ARN }}" >> .env
          echo "SUB_MOBILE_ARN=${{ secrets.SUB_MOBILE_ARN }}" >> .env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
          echo "AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}" >> .env
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env

      # 정적 파일 수집 및 마이그레이션
      - name: Collect static files and run migrations
        run: |
          source venv/bin/activate
          cd InT  # manage.py 파일이 있는 디렉토리로 이동
          cat .env
          python manage.py migrate

      # AWS 인증 정보 설정
      - name: AWS configure credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      # AWS CodeDeploy를 사용하여 배포
      - name: Deploy with AWS CodeDeploy
        run: |
          zip -r deploy.zip .  # 현재 디렉토리를 압축하여 zip 파일 생성
          aws deploy push \
            --application-name ${{ secrets.CODEDEPLOY_APP_NAME }} \
            --s3-location s3://${{ secrets.AWS_BUCKET_NAME }}/deploy.zip \
            --ignore-hidden-files
          aws deploy create-deployment \
            --application-name ${{ secrets.CODEDEPLOY_APP_NAME }} \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --deployment-group-name ${{ secrets.CODEDEPLOY_DG_NAME }} \
            --s3-location bucket=${{ secrets.AWS_BUCKET_NAME }},bundleType=zip,key=deploy.zip \
            --region ap-southeast-1
